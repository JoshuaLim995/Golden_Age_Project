package com.joshua_lsj.goldenage.DataBase;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

/**
 * Created by limsh on 11/27/2017.
 */

public class DatabaseHelper extends SQLiteOpenHelper{

    private static final int DATABASE_VERSION = 1;
    private static final String DB_NAME = "GoldenAgeDB";
    //Constant for Database
private SQLiteDatabase db;


//Create Database to store user data from server
    private static final String CREATE_USERS_TABLE =
            "CREATE TABLE " + DatabaseContract.UserContract.TABLE_NAME + " (" +
                    DatabaseContract.UserContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.UserContract.NAME + " TEXT, " +
                    DatabaseContract.UserContract.IC + " TEXT, " +
                    DatabaseContract.UserContract.GENDER + " TEXT, " +
                    DatabaseContract.UserContract.AGE + " TEXT, " +
                    DatabaseContract.UserContract.CONTACT + " TEXT, " +
                    DatabaseContract.UserContract.ADDRESS + " TEXT, " +
                    DatabaseContract.UserContract.REG_DATE + " TEXT, " +
                    DatabaseContract.UserContract.REG_TYPE + " TEXT)";


    //Create Database to store temporary data in local for sending out to server
    private static final String CREATE_TEMP_USERS_TABLE =
            "CREATE TABLE " + DatabaseContract.TempUserContract.TABLE_NAME + " (" +
                    DatabaseContract.TempUserContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.TempUserContract.NAME + " TEXT, " +
                    DatabaseContract.TempUserContract.IC + " TEXT, " +
                    DatabaseContract.TempUserContract.GENDER + " TEXT, " +
                    DatabaseContract.TempUserContract.AGE + " TEXT, " +
                    DatabaseContract.TempUserContract.CONTACT + " TEXT, " +
                    DatabaseContract.TempUserContract.ADDRESS + " TEXT, " +
                    DatabaseContract.TempUserContract.REG_DATE + " TEXT, " +
                    DatabaseContract.TempUserContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.TempUserContract.UPGRADE + " INT)";


    //Create Database to store client data from server
    private static final String CREATE_CLIENTS_TABLE =
            "CREATE TABLE " + DatabaseContract.ClientContract.TABLE_NAME + " (" +
                    DatabaseContract.ClientContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.ClientContract.NAME + " TEXT, " +
                    DatabaseContract.ClientContract.IC + " TEXT, " +
                    DatabaseContract.ClientContract.GENDER + " TEXT, " +
                    DatabaseContract.ClientContract.AGE + " TEXT, " +
                    DatabaseContract.ClientContract.CONTACT + " TEXT, " +
                    DatabaseContract.ClientContract.ADDRESS + " TEXT, " +
                    DatabaseContract.ClientContract.REG_DATE + " TEXT, " +
                    DatabaseContract.ClientContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.ClientContract.PATIENT_ID + " INT)";


    //Create Database to store patient data from server
    private static final String CREATE_PATIENTS_TABLE =
            "CREATE TABLE " + DatabaseContract.PatientContract.TABLE_NAME + " (" +
                    DatabaseContract.PatientContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.PatientContract.NAME + " TEXT, " +
                    DatabaseContract.PatientContract.IC + " TEXT, " +
                    DatabaseContract.PatientContract.GENDER + " TEXT, " +
                    DatabaseContract.PatientContract.AGE + " TEXT, " +
                    DatabaseContract.PatientContract.CONTACT + " TEXT, " +
                    DatabaseContract.PatientContract.ADDRESS + " TEXT, " +
                    DatabaseContract.PatientContract.REG_DATE + " TEXT, " +
                    DatabaseContract.PatientContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.PatientContract.BLOOD_TYPE + " TEXT, " +
                    DatabaseContract.PatientContract.MEALS + " TEXT, " +
                    DatabaseContract.PatientContract.ALLERGIC + " TEXT, " +
                    DatabaseContract.PatientContract.SICKNESS + " TEXT, " +
                    DatabaseContract.PatientContract.MARGIN + " REAL, " +
                    DatabaseContract.PatientContract.IMAGE + " TEXT)";


    //Create Database to store medical data from server
    private static final String CREATE_MEDICAL_TABLE =
            "CREATE TABLE " + DatabaseContract.MedicalContract.TABLE_NAME + " (" +
                    DatabaseContract.MedicalContract._ID + " INTEGER," +
                    DatabaseContract.MedicalContract.DATE + " TEXT," +
                    DatabaseContract.MedicalContract.PATIENT_ID + " TEXT," +
                    DatabaseContract.MedicalContract.NURSE_ID + " TEXT, " +
                    DatabaseContract.MedicalContract.BLOOD_PRESSURE + " TEXT, " +
                    DatabaseContract.MedicalContract.SUGAR_LEVEL +" TEXT, " +
                    DatabaseContract.MedicalContract.HEART_RATE + " TEXT, " +
                    DatabaseContract.MedicalContract.TEMPERATURE + " TEXT)";



//Create Database to store driver schedule data from server
    private static final String CREATE_DRIVER_SCHEDULE_TABLE =
            "CREATE TABLE " + DatabaseContract.DriverContract.TABLE_NAME + " (" +
                    DatabaseContract.DriverContract._ID + " INTEGER," +
                    DatabaseContract.DriverContract.DRIVER_ID + " TEXT," +
                    DatabaseContract.DriverContract.PATIENT_ID + " TEXT," +
                    DatabaseContract.DriverContract.NURSE_ID + " TEXT, " +
                    DatabaseContract.DriverContract.LOCATION + " TEXT, " +
                    DatabaseContract.DriverContract.DESCRIPTION +" TEXT, " +
                    DatabaseContract.DriverContract.DATE + " TEXT, " +
                    DatabaseContract.DriverContract.TIME + " TEXT)";








    //Create Database to store temporary data in local for sending out to server
    private static final String CREATE_TEMP_USERS_TABLE =
            "CREATE TABLE " + DatabaseContract.TempUserContract.TABLE_NAME + " (" +
                    DatabaseContract.TempUserContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.TempUserContract.NAME + " TEXT, " +
                    DatabaseContract.TempUserContract.IC + " TEXT, " +
                    DatabaseContract.TempUserContract.GENDER + " TEXT, " +
                    DatabaseContract.TempUserContract.AGE + " TEXT, " +
                    DatabaseContract.TempUserContract.CONTACT + " TEXT, " +
                    DatabaseContract.TempUserContract.ADDRESS + " TEXT, " +
                    DatabaseContract.TempUserContract.REG_DATE + " TEXT, " +
                    DatabaseContract.TempUserContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.TempUserContract.UPDATE + " INT)";


    //Create Database to store client data from server
    private static final String CREATE_TEMP_CLIENTS_TABLE =
            "CREATE TABLE " + DatabaseContract.TempClientContract.TABLE_NAME + " (" +
                    DatabaseContract.TempClientContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.TempClientContract.NAME + " TEXT, " +
                    DatabaseContract.TempClientContract.IC + " TEXT, " +
                    DatabaseContract.TempClientContract.GENDER + " TEXT, " +
                    DatabaseContract.TempClientContract.AGE + " TEXT, " +
                    DatabaseContract.TempClientContract.CONTACT + " TEXT, " +
                    DatabaseContract.TempClientContract.ADDRESS + " TEXT, " +
                    DatabaseContract.TempClientContract.REG_DATE + " TEXT, " +
                    DatabaseContract.TempClientContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.TempClientContract.PATIENT_ID + " INT, " +
                    DatabaseContract.TempUserContract.UPDATE + " INT)";


    //Create Database to store patient data from server
    private static final String CREATE_TEMP_PATIENTS_TABLE =
            "CREATE TABLE " + DatabaseContract.TempPatientContract.TABLE_NAME + " (" +
                    DatabaseContract.TempPatientContract._ID + " INTEGER PRIMARY KEY, " +
                    DatabaseContract.TempPatientContract.NAME + " TEXT, " +
                    DatabaseContract.TempPatientContract.IC + " TEXT, " +
                    DatabaseContract.TempPatientContract.GENDER + " TEXT, " +
                    DatabaseContract.TempPatientContract.AGE + " TEXT, " +
                    DatabaseContract.TempPatientContract.CONTACT + " TEXT, " +
                    DatabaseContract.TempPatientContract.ADDRESS + " TEXT, " +
                    DatabaseContract.TempPatientContract.REG_DATE + " TEXT, " +
                    DatabaseContract.TempPatientContract.REG_TYPE + " TEXT, " +
                    DatabaseContract.TempPatientContract.BLOOD_TYPE + " TEXT, " +
                    DatabaseContract.TempPatientContract.MEALS + " TEXT, " +
                    DatabaseContract.TempPatientContract.ALLERGIC + " TEXT, " +
                    DatabaseContract.TempPatientContract.SICKNESS + " TEXT, " +
                    DatabaseContract.TempPatientContract.MARGIN + " REAL, " +
                    DatabaseContract.TempPatientContract.IMAGE + " TEXT, " +
                    DatabaseContract.TempUserContract.UPDATE + " INT)";


    //Create Database to store medical data from server
    private static final String CREATE_TEMP_MEDICAL_TABLE =
            "CREATE TABLE " + DatabaseContract.TempMedicalContract.TABLE_NAME + " (" +
                    DatabaseContract.TempMedicalContract._ID + " INTEGER," +
                    DatabaseContract.TempMedicalContract.DATE + " TEXT," +
                    DatabaseContract.TempMedicalContract.PATIENT_ID + " TEXT," +
                    DatabaseContract.TempMedicalContract.NURSE_ID + " TEXT, " +
                    DatabaseContract.TempMedicalContract.BLOOD_PRESSURE + " TEXT, " +
                    DatabaseContract.TempMedicalContract.SUGAR_LEVEL +" TEXT, " +
                    DatabaseContract.TempMedicalContract.HEART_RATE + " TEXT, " +
                    DatabaseContract.TempMedicalContract.TEMPERATURE + " TEXT, " +
                    DatabaseContract.TempUserContract.UPDATE + " INT)";


    public DatabaseHelper(Context context){
        super(context, DB_NAME, null, DATABASE_VERSION);
    }
    @Override
    public void onCreate(SQLiteDatabase db) {
	this.db = db;
//        db.execSQL(CREATE_TEMP_USERS_TABLE);
//        db.execSQL(CREATE_TEMP_CLIENTS_TABLE);
//        db.execSQL(CREATE_TEMP_PATIENTS_TABLE);
//        db.execSQL(CREATE_TEMP_MEDICAL_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }

	public void createForAdmin(){
		//Create Temp Tables
	        db.execSQL(CREATE_TEMP_USERS_TABLE);
	        db.execSQL(CREATE_TEMP_CLIENTS_TABLE);
	        db.execSQL(CREATE_TEMP_PATIENTS_TABLE);
	        db.execSQL(CREATE_TEMP_MEDICAL_TABLE);

		//create Tables
		db.execSQL(CREATE_USERS_TABLE);
	        db.execSQL(CREATE_CLIENTS_TABLE);
	        db.execSQL(CREATE_PATIENTS_TABLE);
	        db.execSQL(CREATE_MEDICAL_TABLE);
db.execSQL(CREATE_DRIVER_SCHEDULE_TABLE);

	}

public void createForNurse(){
		//create temp medical table
	        db.execSQL(CREATE_TEMP_MEDICAL_TABLE);

		//Create tables
		db.execSQL(CREATE_PATIENTS_TABLE);
	        db.execSQL(CREATE_MEDICAL_TABLE);
		db.execSQL(CREATE_DRIVER_SCHEDULE_TABLE);
}

public void createForClient(){
		//Create tables
		db.execSQL(CREATE_PATIENTS_TABLE);
	        db.execSQL(CREATE_MEDICAL_TABLE);
}

public void createForDriver(){
db.execSQL(CREATE_DRIVER_SCHEDULE_TABLE);
}

//DROP All tables in Database
    public void dropTables(){
        Cursor c = db.rawQuery("SELECT name FROM sqlite_master WHERE type='table'", null);
        List<String> tables = new ArrayList<>();

        // iterate over the result set, adding every table name to a list
        while (c.moveToNext()) {
            tables.add(c.getString(0));
        }

        // call DROP TABLE on every table name
        for (String table : tables) {
            String dropQuery = "DROP TABLE IF EXISTS " + table;
            db.execSQL(dropQuery);
        }

    }

}
